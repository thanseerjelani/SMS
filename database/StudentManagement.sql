-- FULL STACK WEB DEVELOPMENT PROJECT
-- Student Management System
-- Version: 1.0
-- Subject: INTERSHIP WITH PROJECT
-- VTU 2018 CBCS Scheme | B.E/B.Tech 7th Semester
-- Made by: Thanseer Jelani 1JS20CS171

-- Database Name: STUDENTMANAGEMENT

-- Checking for existence of database with name 'STUDENTMANAGEMENT'
-- DROP IF Database Exists and Create new database as 'STUDENTMANAGEMENT'
-- Use Database 'STUDENTMANAGEMENT'
DROP DATABASE IF EXISTS STUDENTMANAGEMENT;
CREATE DATABASE STUDENTMANAGEMENT;
USE STUDENTMANAGEMENT;

-- Table Structure for the table 'USERS'
CREATE TABLE USERS(
USERID INT AUTO_INCREMENT, 
USERNAME VARCHAR(30), 
PASSWORD VARCHAR(30), 
USERTYPE VARCHAR(10), 
PRIMARY KEY(USERID, USERNAME));

-- Dumping values into table 'USERS'
INSERT INTO USERS(USERNAME, PASSWORD, USERTYPE) VALUES ('ADMIN', 'ADMIN', 'ADMIN');

-- Table Structure for the table 'ADMINISTRATOR'
CREATE TABLE ADMINISTRATOR(
USERID INT, 
NAME VARCHAR(30), 
PHONE VARCHAR(10), 
BACKUPCODE VARCHAR(10), 
PRIMARY KEY(USERID), 
FOREIGN KEY (USERID) REFERENCES USERS(USERID) ON DELETE CASCADE);

-- Dumping values into table 'ADMINISTRATOR'
INSERT INTO ADMINISTRATOR VALUES('171', 'ADMIN', '7624841366', 'ADMIN12345');

-- Table Structure for the table 'FACULTY'
CREATE TABLE FACULTY(
USERID INT NOT NULL, 
NAME VARCHAR(30), 
FACTID VARCHAR(15), 
DEPARTMENT VARCHAR(50), 
PRIMARY KEY(FACTID), 
FOREIGN KEY(USERID) REFERENCES USERS(USERID) ON DELETE CASCADE);

-- Table Structure for the table 'STUDENT'
CREATE TABLE STUDENT(
USERID INT NOT NULL, 
USN VARCHAR(15), 
NAME VARCHAR(30), 
GENDER VARCHAR(8), 
DATEOFBIRTH DATE, 
ENROLLYEAR INT, 
DEPARTMENT VARCHAR(50), 
SEM INT, 
SEC VARCHAR(1), 
PRIMARY KEY(USN), 
FOREIGN KEY(USERID) REFERENCES USERS(USERID) ON DELETE CASCADE);

-- Table Structure for the table 'SUBJECT'
CREATE TABLE SUBJECT(
SUBCODE VARCHAR(10) PRIMARY KEY,
NAME VARCHAR(60), 
CREDITS INT);

-- Table Structure for the table 'MARKS'
CREATE TABLE MARKS(
USN VARCHAR(15), 
SUBCODE VARCHAR(10), 
IA1MARKS INT, 
IA2MARKS INT,
IA3MARKS INT, 
FINALIAMARK INT, 
SEMARKS INT, 
PRIMARY KEY(USN, SUBCODE), 
FOREIGN KEY(USN) REFERENCES STUDENT(USN) ON DELETE CASCADE, 
FOREIGN KEY(SUBCODE) REFERENCES SUBJECT(SUBCODE) ON DELETE CASCADE);

-- Table Structure for the table 'ATTENDANCE'
CREATE TABLE ATTENDANCE(
USN VARCHAR(15), 
SUBCODE VARCHAR(10), 
TOTAL INT, 
ATTENDED INT, 
PRIMARY KEY(USN, SUBCODE), 
FOREIGN KEY(USN) REFERENCES STUDENT(USN) ON DELETE CASCADE, 
FOREIGN KEY(SUBCODE) REFERENCES SUBJECT(SUBCODE) ON DELETE CASCADE);

-- Table Structure for the table 'ENROLLED'
CREATE TABLE ENROLLED(
SUBCODE VARCHAR(10) PRIMARY KEY, 
SEM INT, 
FOREIGN KEY(SUBCODE) REFERENCES SUBJECT(SUBCODE) ON DELETE CASCADE);

-- Table Structure for the table 'ASSIGNED'
CREATE TABLE ASSIGNED(
FACTID VARCHAR(15), 
SUBCODE VARCHAR(10), 
SEM INT, 
SEC VARCHAR(1), 
PRIMARY KEY(FACTID, SUBCODE, SEC), 
FOREIGN KEY(SUBCODE) REFERENCES SUBJECT(SUBCODE) ON DELETE CASCADE, 
FOREIGN KEY(FACTID) REFERENCES FACULTY(FACTID));

-- TRIGGER: To Update Final IA Marks when all three IA Marks are available
DROP TRIGGER IF EXISTS MARKSTRIGGER;
Delimiter //
CREATE TRIGGER MARKSTRIGGER
BEFORE UPDATE ON MARKS
FOR EACH ROW
BEGIN
IF (NEW.IA1MARKS IS NOT NULL AND NEW.IA2MARKS IS NOT NULL AND NEW.IA3MARKS IS NOT NULL) THEN
SET NEW.FINALIAMARKS = (NEW.IA1MARKS + NEW.IA2MARKS + NEW.IA3MARKS)/3;
END IF;
END;
//
Delimiter ;